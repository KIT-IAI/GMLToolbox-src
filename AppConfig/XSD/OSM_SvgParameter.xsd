<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 U (http://www.xmlspy.com) by Dr. Joachim Benner (Institut fÃ¼r Angewandte Informatik Forschungszentrum Karlsruhe) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="OSM_SvgVisualisierung">
		<xs:annotation>
			<xs:documentation>Parameter OSM-Visualisierung mit SVG</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DefaultFlaechenDarstellung" type="FlaechenDarstellungType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="DefaultLinienDarstellung" type="LinienDarstellungType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="DefaultPunktDarstellung" type="PunktDarstellungType" minOccurs="0" maxOccurs="1"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="OSMVisual" minOccurs="0" maxOccurs="1"/>
					<xs:element ref="Style" minOccurs="0" maxOccurs="1"/>
					<xs:element ref="Symbol" minOccurs="0" maxOccurs="1"/>				
				<!--xs:element ref="Pattern" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="Hatching" minOccurs="0" maxOccurs="1"/!-->							
				</xs:choice>	
			</xs:sequence>
			<xs:attribute name="datum" type="xs:date" use="optional"/>
			<xs:attribute name="breiteUeberschrift" type="xs:float" use="optional"/>
			<xs:attribute name="hoeheUeberschrift" type="xs:float" use="optional"/>
			<xs:attribute name="breiteDisplay" type="xs:float"/>
			<xs:attribute name="hoeheDisplay" type="xs:float"/>
			<xs:attribute name="showAllSurfaces" type="xs:boolean"/>
			<xs:attribute name="showAllLines" type="xs:boolean"/>
			<xs:attribute name="showAllNodes" type="xs:boolean"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="OSMVisual">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Darstellung" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="osmClassification" type="xs:string" use="required"/>			
			<xs:attribute name="selectAttribut" type="xs:string" use="optional"/>
			<!--xs:attribute name="selectAttribut2" type="xs:string" use="optional"/>
			<xs:attribute name="selectAttribut3" type="xs:string" use="optional"/>
			<xs:attribute name="defaultSymbol" type="xs:IDREF" use="optional"/>
			<xs:attribute name="defaultSymbolSize" type="xs:float" use="optional"/-->
		</xs:complexType>
	</xs:element>
	<xs:element name="Darstellung" type="DarstellungType" abstract="true"/>
	<xs:complexType name="DarstellungType">
		<xs:sequence>
			<xs:element name="SelectAttributWert" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<!--xs:element name="SelectAttributWert2" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="SelectAttributWert3" type="xs:string" minOccurs="0" maxOccurs="unbounded"/-->
		</xs:sequence>
		<!--xs:attribute name="default" type="xs:boolean" use="optional" default="false"/-->
		<xs:attribute name="id" type="xs:ID" use="optional"/>
		<xs:attribute name="priority" type="xs:int" use="optional"/>
	</xs:complexType>
	<xs:element name="FlaechenDarstellung" type="FlaechenDarstellungType" substitutionGroup="Darstellung"/>
	<xs:complexType name="FlaechenDarstellungType" >
			<xs:complexContent>
				<xs:extension base="DarstellungType">
					<xs:sequence>
						<xs:element ref="FlaechenParams" minOccurs="0" maxOccurs="unbounded"/>						
					</xs:sequence>					
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
   
	<xs:element name="LinienDarstellung" type="LinienDarstellungType" substitutionGroup="Darstellung"/>
	<xs:complexType name="LinienDarstellungType">	
			<xs:complexContent>
				<xs:extension base="DarstellungType">
					<xs:sequence>
						<xs:element ref="LinienParams" minOccurs="0" maxOccurs="unbounded"/>					
						<xs:element ref="LineSymbolParams" minOccurs="0"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>					
	</xs:complexType>
	
	<xs:element name="LineSymbolParams">
		<xs:complexType>
			<xs:attribute name="symbolId" type="xs:IDREF" use="required"/>
			<xs:attribute name="symbolDist" type="xs:float" use="optional"/>
			<xs:attribute name="symbolSize" type="xs:float" use="optional"/>
			<xs:attribute name="symbolAngle" use="optional" type="xs:decimal"/>						
		</xs:complexType>
	</xs:element>	
		
	<xs:element name="PunktDarstellung" type="PunktDarstellungType" substitutionGroup="Darstellung"/>
	<xs:complexType name="PunktDarstellungType">
			<xs:complexContent>
				<xs:extension base="DarstellungType">
					<xs:attribute name="attributA" type="xs:string" use="optional"/>
					<xs:attribute name="attributB" type="xs:string" use="optional"/>
					<xs:attribute name="textStyle" type="xs:IDREF" use="optional"/>
					<xs:attribute name="textOffsetX" type="xs:double" use="optional"/>
					<xs:attribute name="textOffsetY" type="xs:double" use="optional"/>
					<xs:attribute name="symbol" type="xs:string" use="optional"/>
					<xs:attribute name="symbolSize" type="xs:double" use="optional"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	
	<xs:element name="RelationDarstellung" type="RelationDarstellungType" substitutionGroup="Darstellung"/>
	<xs:complexType name="RelationDarstellungType">
		<xs:complexContent>
			<xs:extension base="DarstellungType">				
				<xs:attribute name="type" type="xs:string" use="required"/>				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!--  -->
	
	<xs:complexType name="ColorType">
		<xs:attribute name="r" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="255"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="g" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="255"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="b" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="255"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="None"/>
	<xs:element name="ColorName">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="aqua"/>
				<xs:enumeration value="black"/>
				<xs:enumeration value="blue"/>
				<xs:enumeration value="fuchsia"/>
				<xs:enumeration value="gray"/>
				<xs:enumeration value="green"/>
				<xs:enumeration value="lime"/>
				<xs:enumeration value="maroon"/>
				<xs:enumeration value="navy"/>
				<xs:enumeration value="olive"/>
				<xs:enumeration value="purple"/>
				<xs:enumeration value="red"/>
				<xs:enumeration value="silver"/>
				<xs:enumeration value="teal"/>
				<xs:enumeration value="white"/>
				<xs:enumeration value="yellow"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Color">
		<xs:complexType mixed="0">
			<xs:complexContent mixed="0">
				<xs:extension base="ColorType"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="FillColor">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="None"/>
				<xs:element ref="ColorName"/>
				<xs:element ref="Color"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="StrokeColor">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="None"/>
				<xs:element ref="ColorName"/>
				<xs:element ref="Color"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
		
	<xs:element name="Symbol" type="SymbolType"/>
	<xs:complexType name="SymbolType">
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="Path"/>
				<xs:element ref="Circle"/>
				<xs:element ref="Rect"/>
				<xs:element ref="Text"/>
			</xs:choice>
			<xs:attribute name="name" type="xs:ID" use="required"/>
		</xs:complexType>
	
	<xs:element name="Style">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="FillColor"/>
				<xs:element ref="StrokeColor"/>
				<xs:element name="Fill-opacity" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:float">
							<xs:minInclusive value="0"/>
							<xs:maxInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="Stroke-width" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:float">
							<xs:minInclusive value="0"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="Stroke-linecap" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="butt"/>
							<xs:enumeration value="round"/>
							<xs:enumeration value="square"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="Stroke-dasharray" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="Stroke-dashoffset" type="xs:int" minOccurs="0"/>
				<xs:element name="Font-size" type="xs:float" minOccurs="0"/>
				<xs:element name="Font-weight" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="bold"/>
							<xs:enumeration value="lighter"/>
							<xs:enumeration value="normal"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="Font-family" type="xs:string" minOccurs="0"/>
				<xs:element name="Kerning" type="xs:float" minOccurs="0"/>
				<xs:element name="Baseline-shift" type="xs:float" minOccurs="0"/>
				<xs:element name="Baseline-shift-uom" type="xs:string" minOccurs="0"/>
				<xs:element name="Text-anchor"  minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="start"/>
							<xs:enumeration value="middle"/>
							<xs:enumeration value="end"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="styleName" type="xs:ID" use="required"/>
			<xs:attribute use="optional" type="xs:boolean" name="scalable">
				
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Path">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="FillColor" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="StrokeColor" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Stroke-width" type="xs:float" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Stroke-dasharray" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="class" type="xs:IDREF" use="optional"/>
			<xs:attribute name="path" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="Circle">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="FillColor" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="StrokeColor" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Stroke-width" type="xs:float" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Stroke-dasharray" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="class" type="xs:IDREF" use="optional"/>
			<xs:attribute name="cx" type="xs:float" use="required"/>
			<xs:attribute name="cy" type="xs:float" use="required"/>
			<xs:attribute name="r" type="xs:float" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="Rect">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="FillColor" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="StrokeColor" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Stroke-width" type="xs:float" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Stroke-dasharray" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="class" type="xs:IDREF" use="optional"/>
			<xs:attribute name="x" type="xs:float" use="optional" default="0.0"/>
			<xs:attribute name="y" type="xs:float" use="optional" default="0.0"/>
			<xs:attribute name="width" type="xs:float" use="required"/>
			<xs:attribute name="height" type="xs:float" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="Text">
		<xs:complexType>
			<xs:attribute name="class" type="xs:string" use="required"/>
			<xs:attribute name="size" type="xs:float" use="required"/>
			<xs:attribute name="x" type="xs:float" use="required"/>
			<xs:attribute name="y" type="xs:float" use="required"/>
			<xs:attribute name="text" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<!--xs:element name="Pattern">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="Path"/>
				<xs:element ref="Circle"/>
				<xs:element ref="Rect"/>
				<xs:element ref="Text"/>
			</xs:choice>
			<xs:attribute name="name" type="xs:ID" use="required"/>
			<xs:attribute name="x" type="xs:float" use="required"/>
			<xs:attribute name="y" type="xs:float" use="required"/>
			<xs:attribute name="width" type="xs:float" use="required"/>
			<xs:attribute name="height" type="xs:float" use="required"/>
			<xs:attribute name="angle" type="xs:float" use="optional"/>
		</xs:complexType>
	</xs:element-->
	<!--xs:element name="Hatching">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="stroke-width" type="xs:float"/>
				<xs:element name="line-dist" type="xs:float"/>
				<xs:element ref="StrokeColor"/>
				<xs:element ref="FillColor"/>
				<xs:element name="HatchingType">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="horizontal"/>
							<xs:enumeration value="vertical"/>
							<xs:enumeration value="chequered"/>
							<xs:enumeration value="lowerLeftToUpperRight"/>
							<xs:enumeration value="upperLeftToLowerRight"/>
							<xs:enumeration value="crossed"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="name" type="xs:ID" use="required"/>	
		</xs:complexType>
	</xs:element-->
	<xs:element name="FlaechenParams">
		<xs:complexType>
			<xs:attribute name="class" type="xs:IDREF" use="optional"/>
			<!--xs:attribute name="clip" type="xs:boolean" use="optional" default="true"/>
			<xs:attribute name="pattern" type="xs:IDREF" use="optional"/>
			<xs:attribute name="hatching" type="xs:IDREF" use="optional"/--> 
		</xs:complexType>
	</xs:element>
	<xs:element name="LinienParams">
		<xs:complexType>
			<xs:attribute name="class" type="xs:IDREF" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="PunktParams">
		<xs:complexType>
			<xs:attribute name="symbolId" type="xs:IDREF" use="required"/>
			<xs:attribute name="symbolSize" type="xs:float" use="optional"/>
		</xs:complexType>
	</xs:element>
		
	<!--xs:element name="Enumeration">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="EnumItem" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="nameA" type="xs:string" use="required"/>
			<xs:attribute name="nameB" type="xs:string" use="optional"/>
			<xs:attribute name="defaultSymbolSize" type="xs:float" use="optional"/>
			<xs:attribute name="defaultTextStyle" type="xs:IDREF" use="optional"/>
			<xs:attribute name="defaultTextSymbol" type="xs:IDREF" use="optional"/>
			<xs:attribute name="defaultTextSymbolSize" type="xs:float" use="optional"/>
		</xs:complexType>
	</xs:element-->
	<!--xs:element name="EnumItem">
		<xs:complexType>
			<xs:attribute name="schluesselNummerA" type="xs:string" use="optional"/>
			<xs:attribute name="schluesselNummerB" type="xs:string" use="optional"/>
			<xs:attribute name="symbolId" type="xs:IDREF" use="optional"/>
			<xs:attribute name="symbolSize" type="xs:float" use="optional"/>
			<xs:attribute name="text" type="xs:string" use="optional"/>
			<xs:attribute name="textStyle" type="xs:IDREF" use="optional"/>
			<xs:attribute name="textSymbol" type="xs:IDREF" use="optional"/>
			<xs:attribute name="textSymbolSize" type="xs:float" use="optional"/>
		</xs:complexType>
	</xs:element-->
	<!--xs:element name="ExternalCodeList">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="EnumItem" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element-->
	<!--xs:element name="Marker">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded" minOccurs="1">
				<xs:element ref="Path"/>
			</xs:choice>
			<xs:attribute name="name" use="required" type="xs:ID"/>
			<xs:attribute name="viewBox" use="required" type="xs:string"/>			
			<xs:attribute name="refX" use="required" type="xs:decimal"/>
			<xs:attribute name="refY" use="required" type="xs:decimal"/>
			<xs:attribute name="width" use="required" type="xs:decimal"/>
			<xs:attribute name="height" use="required" type="xs:decimal"/>
		</xs:complexType>
	</xs:element-->
</xs:schema>
